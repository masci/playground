"""
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7^(th) triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. 
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred 
divisors?
"""
from time import time
from euler003 import factorize

def find():
    n=1
    while True:
        cur = sum(xrange(1,n+1))
        exps = factorize(cur).values()
        if reduce(lambda x,y: x*y, (x+1 for x in exps), 1) >= 500:
            print cur
            break
        n+=1

t = time()
find()
print time() - t